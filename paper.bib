@misc{optimist,
  author       = {Randy Davila},
  title        = {The Optimist: Towards Fully Automated Graph Theory Research},
  year         = {2025},
  note         = {Manuscript submitted. Available upon request.},
  doi          = {10.48550/arXiv.2411.09158}
}

@article{caro2022txgraffiti,
  author    = {Yair Caro and Randy Davila and Michael A. Henning and Ryan Pepper},
  title     = {Conjectures of TxGraffiti: Independence, domination, and matchings},
  journal   = {Australasian Journal of Combinatorics},
  volume    = {84},
  number    = {2},
  pages     = {258--274},
  year      = {2022},
  url       = {https://ajc.maths.uq.edu.au/pdf/84/ajc_v84_p258.pdf}
}

@article{TxGraffiti2023,
  author       = {Boris Brimkov and Randy Davila and Houston Schuerger and Michael Young},
  title        = {On a conjecture of TxGraffiti: Relating zero forcing and vertex covers in graphs},
  journal      = {Discrete Applied Mathematics},
  volume       = {359},
  pages        = {290--302},
  year         = {2024},
  doi          = {10.1016/j.dam.2024.08.006}
}

@misc{TxGraffiti,
  author       = {Randy Davila},
  title        = {Automated conjecturing in mathematics with TxGraffiti},
  year         = {2025},
  note         = {Manuscript submitted. Available upon request.},
  doi          = {10.48550/arXiv.2409.19379}
}

@misc{davila2023txgraffiti,
  author       = {Randy Davila and Jes√∫s A. De Loera and Jillian Eddy and Ethan Fang and Junwei Lu and Zini Yang},
  title        = {The Rank of Mathematical Conjectures},
  year         = {2025},
  note         = {In preparation. Available upon request.}
}

@conference{osti_960616,
  author       = {Hagberg, Aric and Swart, Pieter J. and Schult, Daniel A.},
  title        = {Exploring network structure, dynamics, and function using NetworkX},
  annote       = {NetworkX is a Python language package for exploration and analysis of networks and network algorithms. The core package provides data structures for representing many types of networks, or graphs, including simple graphs, directed graphs, and graphs with parallel edges and self loops. The nodes in NetworkX graphs can be any (hashable) Python object and edges can contain arbitrary data; this flexibility mades NetworkX ideal for representing networks found in many different scientific fields. In addition to the basic data structures many graph algorithms are implemented for calculating network properties and structure measures: shortest paths, betweenness centrality, clustering, and degree distribution and many more. NetworkX can read and write various graph formats for eash exchange with existing data, and provides generators for many classic graphs and popular graph models, such as the Erdoes-Renyi, Small World, and Barabasi-Albert models, are included. The ease-of-use and flexibility of the Python programming language together with connection to the SciPy tools make NetworkX a powerful tool for scientific computations. We discuss some of our recent work studying synchronization of coupled oscillators to demonstrate how NetworkX enables research in the field of computational networks.},
  url          = {https://www.osti.gov/biblio/960616},
  place        = {United States},
  organization = {Los Alamos National Laboratory (LANL), Los Alamos, NM (United States)},
  year         = {2008},
  month        = {01}}
